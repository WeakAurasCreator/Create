name: Gather Journal info

on:
  schedule:
    - cron: '0 0 * * WED'
  workflow_dispatch:

jobs:
  gather-items:
    runs-on: ubuntu-latest
    env:
      BLIZZARD_CLIENT_ID: ${{ secrets.BLIZZARD_CLIENT_ID }}
      BLIZZARD_CLIENT_SECRET: ${{ secrets.BLIZZARD_CLIENT_SECRET }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install pandas
        run: pip install pandas

      - name: Create data directory
        run: mkdir -p data

      - name: Download CSV files
        run: |
          curl -L "https://wago.tools/db2/JournalEncounter/csv?product=wow" -o data/JournalEncounter.csv
          curl -L "https://wago.tools/db2/JournalInstance/csv?product=wow" -o data/JournalInstance.csv
          curl -L "https://wago.tools/db2/JournalTierXInstance/csv?product=wow" -o data/JournalTierXInstance.csv
          curl -L "https://wago.tools/db2/JournalTier/csv?product=wow" -o data/JournalTier.csv

      - name: Convert CSVs to JSON
        run: |
          python - <<EOF
          import pandas as pd
          import json

          def process_journal_encounter():
              df = pd.read_csv('data/JournalEncounter.csv')
              df = df.where(pd.notnull(df), None)
              df['custom_key'] = df['Name_lang'] + '(' + df['DungeonEncounterID'].astype(str) + ')'
              grouped = df.groupby('custom_key').apply(lambda x: x.to_dict('records')).to_dict()
              with open('data/JournalEncounter.json', 'w') as f:
                  json.dump(grouped, f, indent=4, allow_nan=False)

          def process_journal_instance():
              df = pd.read_csv('data/JournalInstance.csv')
              df = df.where(pd.notnull(df), None)
              df.set_index('ID', inplace=True)
              df.to_json('data/JournalInstance.json', orient='index', indent=4)

          def process_journal_tier_x_instance():
              df = pd.read_csv('data/JournalTierXInstance.csv')
              df = df.where(pd.notnull(df), None)
              df.set_index('JournalInstanceID', inplace=True)
              df.to_json('data/JournalTierXInstance.json', orient='index', indent=4)

          def process_journal_tier():
              df = pd.read_csv('data/JournalTier.csv')
              df = df.where(pd.notnull(df), None)
              df.set_index('ID', inplace=True)
              df.to_json('data/JournalTier.json', orient='index', indent=4)

          process_journal_encounter()
          process_journal_instance()
          process_journal_tier_x_instance()
          process_journal_tier()
          EOF
      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git config pull.rebase true   # rebase
          git add data/
          git commit -m "Updated JournalEncounter" || echo "No changes to commit"
          git pull || echo "No changes to pull"
          git push || echo "No changes to push"
