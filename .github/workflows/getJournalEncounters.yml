name: Gather Journal info

on:
  schedule:
    - cron: '0 0 * * WED'
  workflow_dispatch:

jobs:
  gather-items:
    runs-on: ubuntu-latest
    env:
      BLIZZARD_CLIENT_ID: ${{ secrets.BLIZZARD_CLIENT_ID }}
      BLIZZARD_CLIENT_SECRET: ${{ secrets.BLIZZARD_CLIENT_SECRET }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install pandas
        run: pip install pandas

      - name: Create data directory
        run: mkdir -p data

      - name: Download CSV
        run: curl -L "https://wago.tools/db2/JournalEncounter/csv?product=wow" -o data/JournalEncounter.csv

      - name: Convert CSV to JSON with custom key and valid JSON
        run: |
          python - <<EOF
          import pandas as pd
          import json
          
          # Read the CSV file
          df = pd.read_csv('data/JournalEncounter.csv')
          
          # Replace NaN values with None so that they convert to JSON null
          df = df.where(pd.notnull(df), None)
          
          # Create a custom key combining Name_lang and DungeonEncounterID in the format: Name_lang(DungeonEncounterID)
          df['custom_key'] = df['Name_lang'] + '(' + df['DungeonEncounterID'].astype(str) + ')'
          
          # Group rows by the custom key (each key will map to a list of row dictionaries)
          grouped = df.groupby('custom_key').apply(lambda x: x.to_dict('records')).to_dict()
          
          # Write the grouped data to a JSON file with indentations for readability
          with open('data/JournalEncounter.json', 'w') as f:
              json.dump(grouped, f, indent=4, allow_nan=False)
          EOF
      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git config pull.rebase true   # rebase
          git add data/
          git commit -m "Updated JournalEncounter" || echo "No changes to commit"
          git pull || echo "No changes to pull"
          git push || echo "No changes to push"
